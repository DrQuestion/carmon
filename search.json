[{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to carmon","title":"Contributing to carmon","text":"outlines propose change carmon. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to carmon","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to carmon","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"adding-new-omics-types-and-marginal-distributions","dir":"","previous_headings":"Bigger changes","what":"Adding new omics types and marginal distributions","title":"Contributing to carmon","text":"carmon package built grow. primarily plan future expand range omics types carmon tailored . also plan expand range marginal probability distributions available. want contribute growth, please respect inner function structure environment package. describe main guidelines different scenarios. Please, respect explained , time complying remaining rules contribution. case, feel free issue feature request GitHub page package believe add support new omics types marginals.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"new-omics-type-marginal-distribution-already-implemented","dir":"","previous_headings":"Bigger changes > Adding new omics types and marginal distributions","what":"New omics type, marginal distribution already implemented","title":"Contributing to carmon","text":"marginal distribution want assign default new omics type already available (check ones which_marginals()), passages follow include new omics type: Add omics type series synonyms believe appropriate function omics2marginal() R/copulize.R file. example, can see “rna-seq” “gene count” link Negative Binomial marginal distribution. Modify user helping function which_omics() R/helpers.R file accordingly, adding new omics type, accepted synonyms, default marginal distribution decided assign . Please, respect syntax message (indentation, order words, etc.) mirror behaviour omics types already explained .","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"new-marginal-distribution-no-new-omics-type","dir":"","previous_headings":"Bigger changes > Adding new omics types and marginal distributions","what":"New marginal distribution, no new omics type","title":"Contributing to carmon","text":"want expand library marginal distributions package, say want add Foo Bar marginal distribution: possible, include support model design matrix design formula include covariates estimation parameters. (yet implemented version 0.99.0) also include strategies perform inversion non invertible distributions. Implementing least median method mandatory. Make sure respect dimensionalities expected functions use internally new function implementing. good way check make sure every variable layer obtain output approximately distributed according standard normal distribution. Make sure appropriately deal occasional infinite values function hackInf(). Follow already existing functions examples. nb_m_copulizer() function example non-invertible marginal, ln_m_copulizer() example invertible one. else (tolower(marginals[l] %% c(\"fb\", \"foo bar\")) { ... } Make sure overwrite marginals[l] element \"foo bar\" full name. Modify which_marginals() function R/helpers.R file include message information now marginal, following syntax indentation ones present already.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"new-omics-type-new-marginal-distribution","dir":"","previous_headings":"Bigger changes > Adding new omics types and marginal distributions","what":"New omics type, new marginal distribution","title":"Contributing to carmon","text":"adding new omics type follows marginal distribution implemented yet carmon package, please follow steps apart first step described, one modifying omics2marginals() R/copulize.R file. Instead, modify follows: allow new marginal distribution used default new omics type, modify omics2marginals() function adding else statement final else statement assigns empirical marginal distribution. Also case, include omics type series synonyms believe appropriate, assign new marginal distribution marginals[l] object marginals[l] <- \"fb\". , following syntax already available allow change beaccomplished seamlessly.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to carmon","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"DrQuestion/carmon\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to carmon","text":"New code follow tidyverse style guide. can use Air apply style, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://drquestion.github.io/carmon/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to carmon","text":"Please note carmon project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://drquestion.github.io/carmon/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://drquestion.github.io/carmon/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://drquestion.github.io/carmon/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://drquestion.github.io/carmon/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://drquestion.github.io/carmon/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://drquestion.github.io/carmon/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with carmon","title":"Getting help with carmon","text":"Thank using carmon! filing issue, things know make process smooth possible parties.","code":""},{"path":"https://drquestion.github.io/carmon/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with carmon","text":"Start making minimally reproducible example, also known ‘reprex’. may use reprex R package create one, though necessary help. make R-question-asking endeavors easier. Learning use takes 5 10 minutes. tips make minimally reproducible example, see StackOverflow link.","code":""},{"path":"https://drquestion.github.io/carmon/SUPPORT.html","id":"where-to-post-it","dir":"","previous_headings":"","what":"Where to post it?","title":"Getting help with carmon","text":"Bioconductor help web page gives overview places may help answer question. Bioconductor software related questions, bug reports feature requests, addressed appropriate Bioconductor/carmon GitHub repository. Follow bug report feature request templates GitHub. package GitHub repository, see next bullet point. Bioconductor software usage questions addressed Bioconductor Support Website. Make sure use appropriate package tag, otherwise package authors get notification. General R questions can posed StackOverflow RStudio Community website especially pertain tidyverse RStudio GUI related products.","code":""},{"path":"https://drquestion.github.io/carmon/SUPPORT.html","id":"issues-or-feature-requests","dir":"","previous_headings":"","what":"Issues or Feature Requests","title":"Getting help with carmon","text":"opening new issue feature request, sure search issues pull requests ensure one already exist implemented development version. Note. can remove :open search term issues page search open closed issues. See link learn modifying search.","code":""},{"path":"https://drquestion.github.io/carmon/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with carmon","text":"Bioconductor maintainers limited resources strive responsive possible. Please forget tag appropriate maintainer issue GitHub username (e.g., @username). order make easy possible Bioconductor core developers remediate issue. Provide accurate, brief, reproducible report outlined issue templates. Thank trusting Bioconductor.","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reconstruct and analyse multi-omics networks with carmon","text":"Copula-Aided Reconstruction Multi-Omics Networks () R package empowered use copulas statistical tool reconstruction multi-omics networks. use copulas statistical tool allows transfer raw non-normalized omics data normal realm. way, package able harness full statistical power information contained omics layer multi-omics data set. time, transfer multi-omics layer normal realm allows application network reconstruction models assume normal distribution data. Needless say, assumption rarely met omics data, hence advantage use copulas. , first cover formatting input data provide . , show easily build analyse multi-omics network carmon. remaining sections, explore advanced customized uses package, well actually happens hood main function carmon() used.","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Reconstruct and analyse multi-omics networks with carmon","text":"can install Bioconductor : Alternatively, can install development version GitHub. First, make sure install devtools : can install development version :","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"carmon\") if (!require(\"devtools\")) {     install.packages(\"devtools\") } devtools::install_github(\"DrQuestion/carmon\")"},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"input-multi-omics-data-set-up","dir":"Articles","previous_headings":"","what":"Input multi-omics data set-up","title":"Reconstruct and analyse multi-omics networks with carmon","text":"first attach package. can now explain data format. Carmon expects input multi-omics data arranged named R list. element list data set one omics layers, preferably named omics type contains. package several examples multi-omics data sets increasing sizes, can see help(multi_omics). use multi_omics_small. can see list two elements, one containing RNA-seq gene counts named “rnaseq” (multi_omics_small$rnaseq) containing metabolites concentrations named “metabolomics” (multi_omics_small$metabolomics). layer 30 observations, first one measuring expression 14 genes, second one concentration 5 metabolites. Please notice carmon expects non-normalized data, harness best statistical behavior omics data copula. recreate object R, first necessary make sure observations/samples/individuals data set measured order input omics data sets consistent placed data sets, either across rows across column. example, toy data set, can see observations order distributed along rows transcriptomic metabolomic data set. separate data sets properly formatted, can assemble single list follows:","code":"library(carmon) data(multi_omics_small) str(multi_omics_small) #> List of 2 #>  $ rnaseq      : num [1:30, 1:14] 1023 815 1047 725 1217 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:30] \"BXD100\" \"BXD101\" \"BXD73b\" \"BXD44\" ... #>   .. ..$ : chr [1:14] \"Cirbp\" \"Hspa5\" \"P4ha1\" \"Spred1\" ... #>  $ metabolomics: num [1:30, 1:5] 66.1 50.2 56.3 58.9 61 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:30] \"BXD100\" \"BXD101\" \"BXD73b\" \"BXD44\" ... #>   .. ..$ : chr [1:5] \"Phe\" \"Trp\" \"Putrescine\" \"PC aa C36:3\" ... # Let's build two separate data sets just for the sake of our example: layer_1 <- multi_omics_small$rnaseq layer_2 <- multi_omics_small$metabolomics  # This shows that observations are on the rows for both data sets: dim(layer_1) # [1] 30 14 dim(layer_2) # [1] 30  5  # This shows that the observations are all in the same order in both data sets: all(rownames(layer_1) == rownames(layer_2)) # TRUE  # We can now build our R list as follows: multi_omics_small <- list(\"rnaseq\" = layer_1, \"metabolomics\" = layer_2)"},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"carmon-to-perform-copula-aided-reconstruction-analysis-and-plot-of-a-multi-omics-network","dir":"Articles","previous_headings":"","what":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","title":"Reconstruct and analyse multi-omics networks with carmon","text":"carmon package covers multiple functional steps network reconstruction analysis multi-omics data. perform full, default run carmon, necessary run:  hood, several processes happening. order: check-ups formatting input data; copula-based transfer non-normal omics data normal realm; reconstruction selection multi-omics network; centrality consensus analysis identify key components network; plotting multi-omics network (enriched information discovered centrality analysis) results centrality analysis. steps can customized within main wrapper function, using specific arguments. see next sections, first let’s access results centrality consensus analysis function centrality_report():","code":"c_obj <- carmon(multi_omics_small) #> Checking sample-matching, formatting the data, #>     and other formalities.... #> Done! #> ****************Beginning copulization**************** #> Copulizing layer 1 of 2 (rnaseq) #> Copulizing layer 2 of 2 (metabolomics) #> ****************Copulization complete***************** #> ***********Beginning network reconstruction*********** #> Reconstructing network with coglasso, selecting the optimal one with xestars.... #> Optimal network selected! #> ***********Network reconstruction complete************ #> **************Beginning network analysis************** #> Computing centrality measures.... #> Centrality measures computed! #> Compiling the report.... #> Report compiled! #> **************Network analysis complete*************** centrality_report(c_obj) #>          candidate  degree betweenness closeness eigenvector central for #> BC004004  BC004004 0.1667*     0.0719*       0.6          1*         dbe #> Phe            Phe  0.1111      0.0065        1*           0           c"},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"copula-based-transfer-to-the-normal-realm","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","what":"Copula-based transfer to the normal realm","title":"Reconstruct and analyse multi-omics networks with carmon","text":"Carmon harnesses raw statistical behavior non-normally distributed omics data perform proper transfer normal realm. statistical tool package uses task Gaussian copulas. first ingredient perform transition copulas choice statistical behavior best describes omics data, deciding marginal distribution followed omics layer. basic approach choose empirical distribution, take data , without making assumption. approach carmon prefers, possible, assume data follow specific parametric statistical distributions. approach, use omics data estimate parameters distribution, allowing find distribution chosen family best describes omics data. specific types omics data, years, scientific community settled specific distributional assumptions. example, RNA-seq data, together omics types generate count-based measures, generally assumed follow Negative Binomial distribution. Carmon takes several known distributional assumptions implements default tailor treatment specific omics types. omics types known assumption yet, tailored default behavior yet, carmon chooses first approach, one based assumption-free empirical distribution. see omics types tailored default behavior, please use function which_omics(). aware carmon built upgraded, soon new omics types implement tailored default behavior. also terms can use name elements input R list want trigger default behavior corresponding layers. example, see two elements input list multi_omics_small \"rnaseq\", trigger default assumption Negative Binomial distribution model gene counts, \"metabolomics\", trigger default log-normal distribution describe metabolites’ concentrations. default behavior omics types, know particular data set follows different statistical distribution, can run function which_marginals(). function displays statistical distributions carmon curently compatible . information can used customize default behavior carmon copula-based transition normal data. two arguments main wrapping function carmon() can use : omics: provided vector characters, default unnecessary, input list omics types name given element. recommend use especially reason elements named. example two layers list measure omics type, may want explicitate input argument. can use example omics = c(\"rnaseq\", \"metabolomics\"). marginals: also vector characters, overrides default behavior input omics types. also possible mixed case, omics layers want trigger default, others want customize . know first layer rather use assumption-free empirical distribution, normal second, prefer normal behavior third, form argument take: marginals = c(\"e\", \"n\", 0), requesting default behavior 0.","code":"which_omics() #> \"rna-seq\", also as \"rnaseq\", \"gene counts\", \"transcriptomics\" #>     is modeled by default as count data with a negative-binomial marginal. #>  #> \"proteomics\", also as \"protein fragments\", \"protein counts\" #>     is modeled by default as count data with a negative-binomial marginal. #>  #> \"metabolomics\", also as \"lc-ms\", \"gc-ms\", \"ms\" #>     is modeled by default as positive continuous data with a log-normal #>     marginal. #>  #> Anything else is modeled with the empirical marginal. which_marginals() #> \"e\" or \"empirical\" for using the empirical marginal distribution; #> \"n\" or \"normal\" for using the normal marginal distribution; #> \"ln\" or \"lognormal\" for using the log-normal marginal distribution; #> \"nb\" or \"negative binomial\" for using the log-normal marginal distribution."},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"network-reconstruction-and-selection","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","what":"Network reconstruction and selection","title":"Reconstruct and analyse multi-omics networks with carmon","text":"omics layers transferred normal realm, carmon() proceeds build multi-omics network. task package implements multiple network reconstruction strategies, one chosen. defualt, package chooses collaborative graphical lasso (coglasso) (Albanese, Kohlen Behrouzi, 2024) engine reconstruct multi-omics network, method specifically developed multi-omics network reconstruction scenario. carmon also implements three classic alternatives reconstruction networks: graphical lasso (Friedman, Hastie Tibshirani, 2008), neighborhood selection (Meinshausen Buhlmann, 2006), Pearson’s correlation networks. network reconstruction strategy can personalized argument net_method, example net_method = \"coglasso\", choosing one ones, respectively, need \"glasso\", \"mb\", \"correlation\". Apart one specific use case, methods explores network reconstruction among range hyperparameters, usually resulting different network different value (combination values) hyperparameters can take. requires specific model selection procedures can pinpoint best network among ones built. Luckily, network reconstruction method implements, carmon() also comes tailored model selection procedures. coglasso, example, possible choose among three possible strategies. One extended Bayesian Information Criterion (eBIC). two different versions algorithm based StARS (Liu, Roeder Wasserman, 2010), extended coglasso case three different hyperparameters need tuned, described (Albanese, Kohlen Behrouzi, 2024) XStARS. two different versions implemented indeed original XStARS efficient slightly less thorough version XEStARS. default, coglasso network reconstruction method carmon() uses XEStARS. customize model selection procedure, can use sel_method parameter. example, instead default prefer thorough XStARS, can set sel_method = \"xstars\", default \"xestars\" \"ebic\" alternative using eBIC. every network reconstruction procedure, based single hyperparameter, carmon() uses default one-dimensional StARS, options available. See help(carmon), description sel_method argument. methods mentioned , either network reconstruction network selection, can tweaked giving specific arguments. example, using coglasso reconstruction, wanting investigate hyperparameter space thoroughly default, one specify coglasso-specific parameters higher number, say nlambda_w = 20 (normally 8 values explored), nlambda_b = 20 (8 values normally), nc = 10 (5 normally). see arguments one can tweak coglasso network reconstruction selection, please see ?coglasso::bs. network reconstruction methods, please see ?huge::huge.glasso graphical lasso, ?huge::huge.mb neighborhood selection, ?huge::huge.ct Pearson’s correlation, see ?huge::huge.select associated model selection procedures. One specific run mode carmon() require model selection, user directly setting value required hyperparameter. possible using net_method = \"correlation\" setting one cor_cutoff cor_quant. first determines threshold value absolute Pearson’s correlation connection excluded, second determines quantile top connections (per absolute value) need included network. example, setting cor_quant = 0.05 include network top 5% connections based absolute Pearson’s correlation value.","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"centrality-consensus-analysis","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","what":"Centrality consensus analysis","title":"Reconstruct and analyse multi-omics networks with carmon","text":"carmon() selects final network, proceeds performing centrality consensus analysis. step, four different centrality measures computed nodes network, idea larger consensus among different measures specific omics feature, likely feature important studied biological phenomenon. four measures employed degree centrality, betweenness centrality, closeness centrality, eigenvector centrality. default four used consensus, can personalized argument c_measures, using first letter measure want employ. example, use first three measures, can set c_measures = \"dbc\", default \"dbce\".","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"determining-the-size-of-the-consensus","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network > Centrality consensus analysis","what":"Determining the size of the consensus","title":"Reconstruct and analyse multi-omics networks with carmon","text":"also possible personalize many omics features included consensus two arguments: max_candidates_c_measures, quantile_c_measures. arguments determine number top candidates selected measure separately, finding consensus among measures. first absolute value candidates, determined quantile top candidates. default values two arguments max_candidates_c_measures = 20 quantile_c_measures = 0.05, smallest two used. principle holds true user gives values arguments, one two given one determines amount candidates consensus. Please note centrality analysis first optional step, can turned setting argument carmon() analyse = FALSE.","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"plot-of-network-and-of-centrality-analysis-results","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","what":"Plot of network and of centrality analysis results","title":"Reconstruct and analyse multi-omics networks with carmon","text":"final functional step carmon() plotting module. carmon() can generate two plots, depending whether centrality analysis carried . first one show analysis performed measures centrality top candidates, separately measure. means , default, four panels generated four measures found central nodes, measure fails find central nodes, panel displayed. second plot generated selected multi-omics network, enriched results centrality analysis one performed. omics feature found central according measure, first letter measure added end displayed node label, node plotted larger. also means larger consensus, larger node . bottom plot, legend shows color coding different omics types network different edge types different edge strengths, depicting strong connection . multi-omics network plot can personalized three different arguments carmon(): plot_hot_nodes can set FALSE turn enrichment network based centrality analysis, turned default. plot_node_labels can set FALSE hide node labels plot, particularly useful larger networks. plot_hot_nodes TRUE (default behavior) plot_node_labels FALSE, central nodes’ labels displayed plot. hide_isolated hides unconnected nodes plot multi-omics network, TRUE default. Please note also plotting module can turned setting argument carmon() plot = FALSE.","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"custom-run-of-carmon","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","what":"Custom run of carmon()","title":"Reconstruct and analyse multi-omics networks with carmon","text":"run, customize default behavior carmon() information provided , time reconstructing network largest data set provided package, multi_omics. use alternative marginals RNA-seq layer, keeping default metabolomic layer. use omics features normal-realm build network Pearson’s correlation, selecting top 5% connections. perform consensus centrality analysis four measures, select top 2% measure select candidates consensus. Moreover, hide name nodes found central. Finally, inspect result consensus centrality analysis.","code":"data(multi_omics) str(multi_omics) # 162 genes, 76 metabolites, for 30 observations #> List of 2 #>  $ rnaseq      : num [1:30, 1:162] 407 54 148 269 76 91 500 482 65 201 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:30] \"BXD100\" \"BXD101\" \"BXD73b\" \"BXD44\" ... #>   .. ..$ : chr [1:162] \"Plin4\" \"Arc\" \"Egr2\" \"Tekt4\" ... #>  $ metabolomics: num [1:30, 1:76] 317 208 255 282 362 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:30] \"BXD100\" \"BXD101\" \"BXD73b\" \"BXD44\" ... #>   .. ..$ : chr [1:76] \"Ala\" \"Arg\" \"Asn\" \"Cit\" ...  c_obj <- carmon(multi_omics,     marginals = c(\"e\", 0), # Sets the empirical marginal distribution     # for the first layer, and the default     # distribution for the second     net_method = \"correlation\", # Selecting Pearson's correlation     cor_quant = 0.05, # Selecting the top 5% of connections     quantile_c_measures = 0.02, # Top 2% of the candidates     # to determine consensus of centrality     plot_node_labels = FALSE ) #> Checking sample-matching, formatting the data, #>     and other formalities.... #> Done! #> ****************Beginning copulization**************** #> Copulizing layer 1 of 2 (rnaseq) #> Copulizing layer 2 of 2 (metabolomics) #> ****************Copulization complete***************** #> ***********Beginning network reconstruction*********** #> Reconstructing network with Pearson's correlation.... #> Correlation cutoff is 0.64002200550331 #> Network reconstructed! #> ***********Network reconstruction complete************ #> **************Beginning network analysis************** #> Computing centrality measures.... #> Centrality measures computed! #> Compiling the report.... #> Report compiled! #> **************Network analysis complete*************** centrality_report(c_obj) #>               candidate  degree betweenness closeness eigenvector central for #> Xbp1               Xbp1 0.2532*      0.0226    0.4072          1*          de #> Dnajb11         Dnajb11 0.2278*      0.0076    0.3965     0.9875*          de #> Gfod1             Gfod1 0.2194*      0.0062    0.3908     0.9597*          de #> Hsph1             Hsph1 0.2068*      0.0045    0.3886     0.9415*          de #> Pdia6             Pdia6  0.1983      0.0032    0.3853     0.9342*           e #> P4ha1             P4ha1 0.2068*      0.0054    0.3853      0.9007           d #> Hexim1           Hexim1  0.1899     0.0604*    0.4159      0.8308           b #> Lrrc29           Lrrc29  0.0042           0        1*           0           c #> Vwa3a             Vwa3a  0.0042           0        1*           0           c #> Hfe2               Hfe2  0.0042           0        1*           0           c #> Rbm11             Rbm11  0.0042           0        1*           0           c #> PC ae C40:2 PC ae C40:2  0.0717      0.0107   0.4257*           0           c #> Arl4a             Arl4a   0.038     0.0745*      0.34      0.0542           b #> Pllp               Pllp  0.0211     0.0969*    0.2804      0.0025           b #> Opalin           Opalin  0.0084     0.0897*    0.2361       1e-04           b #> Phe                 Phe  0.0422     0.0867*    0.2033           0           b"},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"a-note-on-input-data-formatting","dir":"Articles","previous_headings":"Carmon to perform copula-aided reconstruction, analysis and plot of a  multi-omics network","what":"A note on input data formatting","title":"Reconstruct and analyse multi-omics networks with carmon","text":"also possible provide carmon() single unified multi-omics data set, necessary specify argument p, vector number features layer, order layers assembled data set. Moreover, use case strongly recommend using omics argument specify omics type measured layer. see omics types carmon() tailored , together accepted synonyms assumed statistical behavior, see which_omics().","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"ref","dir":"Articles","previous_headings":"","what":"References","title":"Reconstruct and analyse multi-omics networks with carmon","text":"Albanese, ., Kohlen, W., & Behrouzi, P. (2024). Collaborative graphical lasso (arXiv:2403.18602). arXiv https://doi.org/10.48550/arXiv.2403.18602 Friedman, J., Hastie, T., & Tibshirani, R. (2008). Sparse inverse covariance estimation graphical lasso. Biostatistics, 9(3), 432–441. https://doi.org/10.1093/biostatistics/kxm045 Meinshausen, N., & Buhlmann, P. (2006). High-dimensional graphs variable selection Lasso. Ann. Statist., 34(3), 1436-1462. https://doi.org/10.1214/009053606000000281 Liu, H., Roeder, K., & Wasserman, L. (2010). Stability Approach Regularization Selection (StARS) High Dimensional Graphical Models (arXiv:1006.3316). arXiv https://doi.org/10.48550/arXiv.1006.3316","code":""},{"path":"https://drquestion.github.io/carmon/articles/carmon.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Reconstruct and analyse multi-omics networks with carmon","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] carmon_0.99.0    BiocStyle_2.36.0 #>  #> loaded via a namespace (and not attached): #>  [1] SummarizedExperiment_1.38.1 gtable_0.3.6                #>  [3] xfun_0.53                   bslib_0.9.0                 #>  [5] ggplot2_4.0.0               Biobase_2.68.0              #>  [7] lattice_0.22-7              vctrs_0.6.5                 #>  [9] tools_4.5.1                 generics_0.1.4              #> [11] stats4_4.5.1                parallel_4.5.1              #> [13] pkgconfig_2.0.3             Matrix_1.7-3                #> [15] RColorBrewer_1.1-3          S7_0.2.0                    #> [17] desc_1.4.3                  S4Vectors_0.46.0            #> [19] lifecycle_1.0.4             GenomeInfoDbData_1.2.14     #> [21] compiler_4.5.1              farver_2.1.2                #> [23] textshaping_1.0.4           DESeq2_1.48.2               #> [25] codetools_0.2-20            GenomeInfoDb_1.44.3         #> [27] htmltools_0.5.8.1           sass_0.4.10                 #> [29] yaml_2.3.10                 pkgdown_2.1.3               #> [31] crayon_1.5.3                jquerylib_0.1.4             #> [33] BiocParallel_1.42.2         cachem_1.1.0                #> [35] DelayedArray_0.34.1         abind_1.4-8                 #> [37] locfit_1.5-9.12             digest_0.6.37               #> [39] bookdown_0.45               fastmap_1.2.0               #> [41] grid_4.5.1                  cli_3.6.5                   #> [43] SparseArray_1.8.1           magrittr_2.0.4              #> [45] S4Arrays_1.8.1              withr_3.0.2                 #> [47] UCSC.utils_1.4.0            scales_1.4.0                #> [49] rmarkdown_2.30              XVector_0.48.0              #> [51] httr_1.4.7                  matrixStats_1.5.0           #> [53] igraph_2.2.1                ragg_1.5.0                  #> [55] evaluate_1.0.5              knitr_1.50                  #> [57] GenomicRanges_1.60.0        IRanges_2.42.0              #> [59] rlang_1.1.6                 Rcpp_1.1.0                  #> [61] glue_1.8.0                  BiocManager_1.30.26         #> [63] BiocGenerics_0.54.1         jsonlite_2.0.0              #> [65] R6_2.6.1                    MatrixGenerics_1.20.0       #> [67] systemfonts_1.3.1           fs_1.6.6                    #> [69] coglasso_1.1.0"},{"path":"https://drquestion.github.io/carmon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alessio Albanese. Author, maintainer, copyright holder. Pariya Behrouzi. Author.","code":""},{"path":"https://drquestion.github.io/carmon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Albanese , Behrouzi P (2025). Copula-aided reconstruction multi-omics network carmon. doi:10.18129/B9.bioc.carmon, https://github.com/DrQuestion/carmon/carmon - R package version 0.99.0, https://www.bioconductor.org/packages/carmon. Albanese , Kohlen W, Behrouzi P (2024). “Collaborative graphical lasso.” doi:10.48550/arXiv.2403.18602, https://arxiv.org/abs/2403.18602.","code":"@Manual{,   title = {Copula-aided reconstruction of multi-omics network with carmon},   author = {Alessio Albanese and Pariya Behrouzi},   year = {2025},   url = {https://www.bioconductor.org/packages/carmon},   note = {https://github.com/DrQuestion/carmon/carmon - R package version 0.99.0},   doi = {10.18129/B9.bioc.carmon}, } @Misc{,   title = {Collaborative graphical lasso},   author = {Alessio Albanese and Wouter Kohlen and Pariya Behrouzi},   year = {2024},   publisher = {arXiv},   doi = {10.48550/arXiv.2403.18602},   url = {https://arxiv.org/abs/2403.18602}, }"},{"path":"https://drquestion.github.io/carmon/index.html","id":"carmon---copula-aided-reconstruction-of-multi-omics-networks-","dir":"","previous_headings":"","what":"Copula-Aided Reconstruction of Multi-Omics Networks","title":"Copula-Aided Reconstruction of Multi-Omics Networks","text":"Carmon uses copula-based approaches reconstruct multi-omics networks. Copulas allow maximize use information contained non-normalized raw omics data, creating mirror image normal realm variable every omics layer. Carmon uses “mirror” normal variables reconstruct multi-omics network.","code":""},{"path":"https://drquestion.github.io/carmon/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Copula-Aided Reconstruction of Multi-Omics Networks","text":"can install carmon Bioconductor : Alternatively, can install development version GitHub. First, make sure install devtools : can install development version :","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"carmon\") if (!require(\"devtools\")) {   install.packages(\"devtools\") } devtools::install_github(\"DrQuestion/carmon\")"},{"path":"https://drquestion.github.io/carmon/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Copula-Aided Reconstruction of Multi-Omics Networks","text":"example typical usage carmon reconstruct multi-omics network. customized use package, please see vignette(\"carmon\"). main function package carmon(), single wrapping function encompassing modules package. input data properly formatted, carmon() needs mandatory argument. preferably provided form named R list, element data set omics layer, named R list omics type contains. available omics types carmon specifically tailored, together accepted synonyms, shown function which_omics(). package expects every omics layer perfectly source-matched. means every variable every omics layer must measured individual/sample/observation/replicate. package provides examples multi-omics data sets formatted according carmon’s standard. example use small data set already provided package, multi_omics_small. can see data set two layers, transcriptomic layer named rnaseq list, metabolomic layer named metabolomics. shows also layers measured () 30 observations, measure, respectively, transcript counts 14 genes concentrations 5 metabolites. input properly formatted, possible just run function carmon() , relying default behaviour. single call covers functional modules package. see example properly format input data, explanation functional module package acts hood main function carmon(), examples customized behaviours, please see vignette(\"carmon\"). Among functional modules, one performs centrality analysis based consensus multiple centrality measures highlight key nodes network. nodes candidates important function biological process studying. report generated network analysis can accessed via: report table contains nodes resulted central analysis, according four different measures centrality: degree (d), betwenness (b), closeness (c), eigenvector (e) centrality. Names result central according one measure reported top table, last column contains first letter(s) measure(s) according resulted central. interpretation, measures label node central, important node network.","code":"# Attaching the package library(carmon)  # Loading the carmon-formatted multi-omics data set data(multi_omics_small)  # Displaying the structure of the named R list str(multi_omics_small) carmon_obj <- carmon(multi_omics_small) centrality_report(carmon_obj)"},{"path":"https://drquestion.github.io/carmon/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Copula-Aided Reconstruction of Multi-Omics Networks","text":"carmon package built grow. particular, intend expand new omics types relative marginal distributions. wish favourite omics layer included, please feel free issue feature request , directly contribute following instructions page.","code":""},{"path":"https://drquestion.github.io/carmon/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Copula-Aided Reconstruction of Multi-Omics Networks","text":"Please note carmon project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://drquestion.github.io/carmon/reference/assemble_carmon_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble an object of class carmon_cop and one of class carmon_rec into a carmon object — assemble_carmon_obj","title":"Assemble an object of class carmon_cop and one of class carmon_rec into a carmon object — assemble_carmon_obj","text":"Assemble object class carmon_cop one class carmon_rec carmon object","code":""},{"path":"https://drquestion.github.io/carmon/reference/assemble_carmon_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble an object of class carmon_cop and one of class carmon_rec into a carmon object — assemble_carmon_obj","text":"","code":"assemble_carmon_obj(carmon_cop, carmon_rec)"},{"path":"https://drquestion.github.io/carmon/reference/assemble_carmon_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble an object of class carmon_cop and one of class carmon_rec into a carmon object — assemble_carmon_obj","text":"carmon_cop object S3 class carmon_cop, resulting copulize(). carmon_rec object S3 class carmon_rec, resulting reconstruct().","code":""},{"path":"https://drquestion.github.io/carmon/reference/assemble_carmon_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble an object of class carmon_cop and one of class carmon_rec into a carmon object — assemble_carmon_obj","text":"assemble_carmon_obj() returns object S3 class carmon, assembled results copulize() reconstruct() functions. details composition object see carmon(), keeping mind assembled object resemble result carmon() run setting argument analysis = FALSE.","code":""},{"path":"https://drquestion.github.io/carmon/reference/assemble_carmon_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble an object of class carmon_cop and one of class carmon_rec into a carmon object — assemble_carmon_obj","text":"","code":"data(multi_omics_micro) carmon_cop_obj <- copulize(multi_omics_micro, verbose = FALSE) carmon_rec_obj <- reconstruct(carmon_cop_obj$layers,     net_method = \"correlation\",     cor_quant = 0.5, verbose = FALSE ) carmon_obj <- assemble_carmon_obj(carmon_cop_obj, carmon_rec_obj)"},{"path":"https://drquestion.github.io/carmon/reference/carmon-package.html","id":null,"dir":"Reference","previous_headings":"","what":"carmon: Copula-Aided Reconstruction of Multi-Omics Networks — carmon-package","title":"carmon: Copula-Aided Reconstruction of Multi-Omics Networks — carmon-package","text":"Reconstructs networks multi-omics data sets, harnessing original probability distribution omics layers, use copulas. Use main function carmon() perform functional steps package. encompass copula-based data transformation, network reconstrution, network analysis, plot results.","code":""},{"path":[]},{"path":"https://drquestion.github.io/carmon/reference/carmon-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"carmon: Copula-Aided Reconstruction of Multi-Omics Networks — carmon-package","text":"Maintainer: Alessio Albanese alessio.albanese.bioinf@gmail.com (ORCID) [copyright holder] Authors: Pariya Behrouzi pariya.behrouzi@wur.nl (ORCID)","code":""},{"path":"https://drquestion.github.io/carmon/reference/carmon.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","title":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","text":"Single wrapper function encompassing functional units carmon package: copula-based transition non-normal data normal realm, network reconstruction selection, consensus centrality analysis network identify key omics features, enriched plot network analysis results.","code":""},{"path":"https://drquestion.github.io/carmon/reference/carmon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","text":"","code":"carmon(   layers,   ...,   p = NULL,   omics = NULL,   marginals = NULL,   noninv_method = NULL,   copula = NULL,   net_method = \"coglasso\",   sel_method = NULL,   cor_cutoff = NULL,   cor_quant = NULL,   minimal_output = FALSE,   analyse = TRUE,   c_measures = \"dbce\",   max_candidates_c_measures = NULL,   quantile_c_measures = NULL,   scaled_c_measures = TRUE,   plot = TRUE,   plot_node_labels = TRUE,   hide_isolated = TRUE,   plot_hot_nodes = TRUE,   verbose = 1 )"},{"path":"https://drquestion.github.io/carmon/reference/carmon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","text":"layers omics layers analyze. Preferably provided named R list non-normalized omics data sets. possible names list correspond respective omics type. possible, example two layers technology, please provide omics types parameter omics.  see list available omics types use function which_omics(). data set source-matched (amount matched samples individuals across data set). Placing samples (individuals) also consistent: either along rows data sets, along columns data sets, nothing . samples (individuals) also consistent naming across data sets.layers can also single unified data set, necessary specify argument p. p Necessary case layers single data set. vector number variables omic layer data set (e.g. number transcripts, metabolites etc.), order layers data set. sum elements p less real number features data set, carmon() assumes omics layer , many features real number features minus sum(p). omics Highly recommended. character vector many elements number omics layers, naming omics types layer contains, order provided input layers (e.g. omics = c('RNA-seq', 'proteomics', 'metabolomics')). see list terms omics technologies carmon specifically tailored, use function which_omics(). marginals Optional, specified user prefers use different marginal distributions default distribution carmon tailored omics layers. vector many elements number layers, specifying marginal distribution used omics layer, order provided input layers. see list available marginal distributions, use function which_marginals(). mixed custom setting, place 0 vector position corresponding omics layers default distribution desired. Otherwise, specify desired marginal distribution (e.g. marginals = c(0, 'lognormal', 0) means 'default, lognormal, default'). noninv_method placeholder future functionalities carmon, use. copula placeholder future functionalities carmon, use. net_method network reconstruction method use. four methods currently available : 'coglasso' collaborative graphical lasso, 'glasso' graphical lasso, 'mb' Meinshausen-Buhlmann neighborhood selection, 'correlation' thresholded Pearson's correlation network. default method 'coglasso'. See References information network reconstruction methods. sel_method network selection method. reconstruction procedure set model selection procedures available. See References information network selection methods. list : net_method = 'coglasso': 'xstars' eXtended StARS, 'xestars' eXtended  Efficient StARS, 'ebic' Extended Bayesian Information Criterion. Default 'xestars'. net_method = 'glasso': 'stars' StARS, 'ric' Rotational Information Criterion, 'ebic' Extended Bayesian Information Criterion. Default 'stars'. net_method = 'mb' 'correlation': 'stars' StARS, 'ric' Rotational Information Criterion. Default 'stars'. ... additional optional arguments given network reconstruction selection procedure. available arguments depend chosen network reconstruction network selection methods. using 'coglasso' (default option), see coglasso::bs() reconstruction selection arguments. reconstructing 'glasso', 'mb', 'correlation' without setting cor_cutoff cor_quant see, respectively, huge::huge.glasso(), huge::huge.mb(), huge::huge.ct(). additional options network selection last three reconstruction methods, see huge::huge.select(). cor_cutoff Optional net_method = 'correlation'. cutoff value absolute Pearson's correlation network. edge absolute correlation cutoff excluded final network. used default, cutoff generated internal calculations. cor_quant Optional net_method = 'correlation', set alternative cor_cutoff. Determine cutoff correlation based top percentile indicated user. example, cor_quant = 0.2 set correlation cutoff 20th percentile absolute Pearson's correlation values, ordered highest lowest. used default, cutoff generated internal calculations. minimal_output Logical. Set TRUE get minimal output network reconstruction selection module carmon(), mainly differs basis network reconstruction method set net_method. Defaults FALSE. analyse Logical. Whether perform consensus centrality analysis identify key omics features. highlighted features important based consensus multiple centrality measures. Defaults TRUE. c_measures string characters, one representing one four possible centrality measures implemented consensus centrality analysis: 'd' stands degree centrality, 'b' betweenness centrality, 'c' closeness centrality, 'e' eigenvector centrality. Default 'dbce': four measures. max_candidates_c_measures highest amount nodes can highlighted measure centrality, finding consensus? Default 20. given together quantile_c_measures argument, overrides quantile_c_measures argument max_candidates_c_measures smaller  chosen quantile, overrode quantile_c_measures opposite case. quantile_c_measures top percentile nodes can highlighted measure centrality, finding consensus? Default top 5%. given together max_candidates_c_measures, overrides max_candidates_c_measures argument amount nodes chosen top percentile smaller chosen maximum amount candidate nodes, overrode max_candidates_c_measures opposite case. scaled_c_measures Logical. Whether compute centrality measures 0-1 scaled values. Defaults TRUE. plot Logical. Whether plot multi-omics network (enriched results centrality analysis performed), results centrality analysis (performed). Defaults TRUE. plot_node_labels Show node names plot network. Defaults TRUE. hide_isolated Hide plot nodes connected node. Defaults TRUE. plot_hot_nodes Highlight plot nodes selected consensus-central nodes node centrality analysis, drawing bigger adding criteria result central. larger consensus, bigger nodes plotted. Defaults TRUE. verbose level verbosity carmon() process. 0 suppresses information output, 1 2 give progressively increasing amounts information inner computations happening inside package's modules. Defaults 1","code":""},{"path":"https://drquestion.github.io/carmon/reference/carmon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","text":"carmon() returns object S3 class carmon. elements object depend chosen network reconstruction ('coglasso', default) selection ('xestars', default) strategies, whether consensus centrality analysis carried (yes, default).  Every possible running mode carmon() produces carmon object following elements: layers R list, element data set corresponding omics layer, already copulized transferred normal realm. omics vector containing omics type assigned omics layer. marginals vector containing marginal distributions used transfer omics layer normal realm. sel_adj adjacency matrix final selected carmon network. net_method chosen network reconstruction method. sel_method chosen model selection method. network igraph network object final selected carmon network. call matched call. Depending different network reconstruction selection strategies chosen, elements may change. choosing 'coglasso' 'glasso' network reconstruction method, additional returned element : sel_icov inverse covariance matrix final selected network. Otherwise, choosing 'correlation', carmon() also returns: cor Pearson's correlation matrix final selected network. minimal_output set TRUE, also elements returned object S3 class carmon given carmon(). non minimal output elements resulting network reconstruction selection, please look coglasso::bs() net_method = 'coglasso'. using 'glasso', 'mb', using 'correlation' without setting value cor_cutoff cor_quant, look huge::huge() huge::huge.select(). Moreover, analyse = TRUE (default behaviour), carmon object contains two additional elements resulting consensus centrality analysis: report R data frame. rows correspond nodes identified central analysis, ordered based large consensus among different measures. data frame 6 columns: candidate, name central node; degree, degree centrality node; betweenness, betweenness centrality node; closeness, closeness centrality node; eigenvector, eigenvector centrality node; central , string reporting first letter measures according node central . measures_list R named list many elements number chosen centrality measures, name element associated centrality measure. element named numerical vector, containing measures top central nodes identified analysis. name element vectors name node associated reported measure.","code":""},{"path":"https://drquestion.github.io/carmon/reference/carmon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","text":"collaborative graphical lasso eXtended StARS, see Albanese et al. (2024) graphical lasso, see Friedman et al. (2007) neighborhood selection, see Meinshausen Buhlmann (2006) StARS selection procedure, see Liu et al. (2010)","code":""},{"path":"https://drquestion.github.io/carmon/reference/carmon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform copula-aided reconstruction, analysis and plot of a multi-omics network — carmon","text":"","code":"# Suggested usage: provide input data as a named R list, each element being # the data set of an omics layer, then let carmon do the rest. See the # vignettes for a more custom usage! data(multi_omics_small) c_obj <- carmon(multi_omics_small, verbose = FALSE)  #> Warning: is.na() applied to non-(list or vector) of type 'expression'"},{"path":"https://drquestion.github.io/carmon/reference/centrality_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the table of results of the consensus centrality analysis of the carmon network — centrality_report","title":"Display the table of results of the consensus centrality analysis of the carmon network — centrality_report","text":"Display table results consensus centrality analysis carmon network","code":""},{"path":"https://drquestion.github.io/carmon/reference/centrality_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the table of results of the consensus centrality analysis of the carmon network — centrality_report","text":"","code":"centrality_report(carmon_obj)"},{"path":"https://drquestion.github.io/carmon/reference/centrality_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the table of results of the consensus centrality analysis of the carmon network — centrality_report","text":"carmon_obj object S3 class carmon, possibly already resulting full carmon() run, least undergone centrality analysis compute_centrality().","code":""},{"path":"https://drquestion.github.io/carmon/reference/centrality_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the table of results of the consensus centrality analysis of the carmon network — centrality_report","text":"centrality_report() returns centrality report object S3 class carmon given input, form R data frame. rows correspond nodes identified central analysis, ordered based large consensus among different measures. data frame 6 columns: candidate, name central node; degree, degree centrality node; betweenness, betweenness centrality node; closeness, closeness centrality node; eigenvector, eigenvector centrality node; central , string reporting first letter measures according node central .","code":""},{"path":"https://drquestion.github.io/carmon/reference/centrality_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the table of results of the consensus centrality analysis of the carmon network — centrality_report","text":"","code":"# Let's build and analyse a carmon network: data(multi_omics_small) c_obj <- carmon(multi_omics_small,     net_method = \"correlation\",     cor_quant = 0.25, analysis = TRUE, plot = FALSE,     # analysis is already TRUE by default     verbose = FALSE ) # To display the table of the results of the centrality analysis: centrality_report(c_obj) #>          candidate degree betweenness closeness eigenvector central for #> BC004004  BC004004   0.5*       0.138   0.6071*          1*         dce #> P4ha1        P4ha1 0.2222     0.2308*    0.5152      0.1935           b"},{"path":"https://drquestion.github.io/carmon/reference/compute_centrality.html","id":null,"dir":"Reference","previous_headings":"","what":"Find key nodes in a carmon network — compute_centrality","title":"Find key nodes in a carmon network — compute_centrality","text":"Find top central nodes according multiple centrality measures choice Use consensus multiple centrality measures identify nodes important network obtained carmon","code":""},{"path":"https://drquestion.github.io/carmon/reference/compute_centrality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find key nodes in a carmon network — compute_centrality","text":"","code":"compute_centrality(   carmon_obj,   measures = \"dbce\",   max_candidates = NULL,   quant = NULL,   scaled = TRUE,   verbose = FALSE )"},{"path":"https://drquestion.github.io/carmon/reference/compute_centrality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find key nodes in a carmon network — compute_centrality","text":"carmon_obj object S3 class carmon. measures string characters, one representing one four possible centrality measures implemented: 'd' stands degree centrality, 'b' betweenness centrality, 'c' closeness centrality, 'e' eigenvector centrality. Default 'dbce', four measures. max_candidates highest amount nodes can highlighted measure, finding consensus? Default 20. given together quant argument, overrides quant argument max_candidates smaller chosen quantile, overrode quant opposite case. quant top percentile nodes can highlighted measure, finding consensus? Default top 5%. given together max_candidates argument, overrides max_candidates argument amount nodes chosen top percentile smaller chosen maximum amount candidate nodes, overrode max_candidates opposite case. scaled Logical, whether compute centrality measures 0-1 scaled values. Defaults TRUE. verbose level verbosity centrality analysis. 0 suppresses information output, 1 2 give progressively increasing amounts information inner computations happening inside analysis.","code":""},{"path":"https://drquestion.github.io/carmon/reference/compute_centrality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find key nodes in a carmon network — compute_centrality","text":"compute_centrality() returns object S3 class carmon, consisting input carmon_obj enriched two new elements: report R data frame. rows correspond nodes identified central analysis, ordered based large consensus among different measures. data frame 6 less columns, depending whether respective centrality measures found central node: candidate, name central node; degree, degree centrality node; betweenness, betweenness centrality node; closeness, closeness centrality node; eigenvector, eigenvector centrality node; central , string reporting first letter measures according node central . measures_list R named list many elements number chosen centrality measures, name element associated centrality measure. element named numerical vector, containing measures top central nodes identified analysis. name element vectors name node associated reported measure.","code":""},{"path":"https://drquestion.github.io/carmon/reference/compute_centrality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find key nodes in a carmon network — compute_centrality","text":"","code":"# compute_centrality() needs an object of S3 class 'carmon' as an input. The # following line quickly obtains one. data(multi_omics_small) c_obj <- carmon(multi_omics_small,     net_method = \"correlation\",     cor_quant = 0.25, analysis = FALSE, verbose = FALSE )  #> Warning: is.na() applied to non-(list or vector) of type 'expression'  # Then to perform the consensus centrality analysis: c_obj <- compute_centrality(c_obj)"},{"path":"https://drquestion.github.io/carmon/reference/copulize.html","id":null,"dir":"Reference","previous_headings":"","what":"Use copulas to transfer all omics layers to the normal realm — copulize","title":"Use copulas to transfer all omics layers to the normal realm — copulize","text":"Use copulas transfer omics layers normal realm","code":""},{"path":"https://drquestion.github.io/carmon/reference/copulize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use copulas to transfer all omics layers to the normal realm — copulize","text":"","code":"copulize(   layers,   p = NULL,   omics = NULL,   marginals = NULL,   noninv_method = NULL,   copula = NULL,   verbose = FALSE )"},{"path":"https://drquestion.github.io/carmon/reference/copulize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use copulas to transfer all omics layers to the normal realm — copulize","text":"layers omics layers analyze. Preferably provided named R list non-normalized omics data sets. possible names list correspond respective omics type. possible, example two layers technology, please provide omics types parameter omics.  see list available omics types run function which_omics(). data set source-matched (amount matched samples individuals across data set). Placing samples (individuals) also consistent: either along rows data sets, along columns data sets, nothing . samples (individuals) also consistent naming across data sets.layers can also single unified data set, necessary specify argument p. p Optional, specified case layers single data set. vector number variables omic layer data set (e.g. number transcripts, metabolites etc.), order layers data set. given single number, carmon assumes total data sets two, number given dimension first one. omics Highly recommended. vector many elements number layers, naming omics layer contains, order provided input layers (e.g. omics = c('RNA-seq', 'proteomics', 'metabolomics')). see list terms omics technologies carmon specifically tailored, use function which_omics(). marginals Optional, specified user prefers use different marginal distributions default distribution carmon tailored omics layers. vector many elements number layers, specifying marginal distribution used omics layer, order provided input layers. see list available marginal distributions, use function which_marginals(). custom setting, place 0 vector position corresponding omics layers default distribution desired. Otherwise, specify desired marginal distribution. noninv_method placeholder future functionalities carmon, use. copula placeholder future functionalities carmon, use. verbose level verbosity copulization process. 0 suppresses information output, 1 2 give progressively increasing amounts information inner computations happening inside copulize().","code":""},{"path":"https://drquestion.github.io/carmon/reference/copulize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use copulas to transfer all omics layers to the normal realm — copulize","text":"copulize() returns object S3 class carmon_cop, following elements: layers R list, element data set corresponding layer, already copulized transferred normal realm. omics vector containing omics type assigned omics layer. marginals vector containing marginal distributions used transfer omics layer normal realm. copulize_call matched call.","code":""},{"path":"https://drquestion.github.io/carmon/reference/copulize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use copulas to transfer all omics layers to the normal realm — copulize","text":"","code":"# To apply the copula-based transition to the normal realm, it is sufficient # to provide the input data as a named R list, with each element being the # data set of an omics layer. data(multi_omics_micro) copulized <- copulize(multi_omics_micro, verbose = FALSE)"},{"path":"https://drquestion.github.io/carmon/reference/get_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a carmon network — get_network","title":"Extract a carmon network — get_network","text":"get_network() extracts reconstructed (selected) network carmon object.","code":""},{"path":"https://drquestion.github.io/carmon/reference/get_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a carmon network — get_network","text":"","code":"get_network(carmon_obj, labels = NULL)"},{"path":"https://drquestion.github.io/carmon/reference/get_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a carmon network — get_network","text":"carmon_obj object S3 class carmon S3 class carmon_rec. labels Optional. Used carmon_obj S3 class carmon_rec, vector strings containing variable names.","code":""},{"path":"https://drquestion.github.io/carmon/reference/get_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a carmon network — get_network","text":"get_network() returns selected network, form object class igraph. using object class carmon_rec, nodes labels, unless provided labels.","code":""},{"path":"https://drquestion.github.io/carmon/reference/get_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a carmon network — get_network","text":"","code":"data(multi_omics_small) c_obj <- carmon(multi_omics_small,     net_method = \"correlation\",     cor_quant = 0.25, analysis = FALSE, plot = FALSE,     verbose = FALSE ) network <- get_network(c_obj)"},{"path":"https://drquestion.github.io/carmon/reference/multi_omics.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","title":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","text":"dataset containing transcript metabolite values analysed Albanese et al. 2024, subset multi-omics data set published Jan, M., Gobet, N., Diessler, S. et al. multi-omics digital research object genetics sleep regulation. Sci Data 6, 258 (2019). data set generation follow closely can found R package coglasso. Also see file carmon R package, 'carmon/data-raw/multi-omics_data.R' see data set generated. multi_omics_small smaller version, limited transcript Cirbp transcripts metabolites belonging neighborhood described Albanese et al. 2024 multi_omics_micro minimal version Cirbp selection neighborhood.","code":""},{"path":"https://drquestion.github.io/carmon/reference/multi_omics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","text":"","code":"data(multi_omics)  data(multi_omics_small)  data(multi_omics_micro)"},{"path":[]},{"path":"https://drquestion.github.io/carmon/reference/multi_omics.html","id":"multi-omics","dir":"Reference","previous_headings":"","what":"multi_omics","title":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","text":"named R list two elements, data set 30 observations: rnaseq data set RNA-seq counts 162 transcripts mouse cortex sleep deprivation (0–34991) metabolomics data set abundance values 76 metabolites (0.02–1112.67)","code":""},{"path":"https://drquestion.github.io/carmon/reference/multi_omics.html","id":"multi-omics-small","dir":"Reference","previous_headings":"","what":"multi_omics_small","title":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","text":"named R list two elements, data set 30 observations: rnaseq data set RNA-seq counts 14 transcripts mouse cortex sleep deprivation (412–16235) metabolomics data set abundance values 5 metabolites (0.17–145.33)","code":""},{"path":"https://drquestion.github.io/carmon/reference/multi_omics.html","id":"multi-omics-micro","dir":"Reference","previous_headings":"","what":"multi_omics_micro","title":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","text":"named R list two elements, data set 30 observations: rnaseq data set RNA-seq counts 2 transcripts mouse cortex sleep deprivation (623–13304) metabolomics data set abundance values 2 metabolites (58.80–145.33)","code":""},{"path":"https://drquestion.github.io/carmon/reference/multi_omics.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multi-omics dataset of sleep deprivation in mouse — multi_omics","text":"Jan, M., Gobet, N., Diessler, S. et al. multi-omics digital research object genetics sleep regulation. Sci Data 6, 258 (2019) doi: 10.1038/s41597-019-0171-x Figshare folder original manuscript","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot.carmon.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot carmon networks — plot.carmon","title":"Plot carmon networks — plot.carmon","text":"plot.carmon() plots annotated network object S3 class carmon. Nodes different omics layers different color coding. plot network, enough use plot() call carmon object.","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot.carmon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot carmon networks — plot.carmon","text":"","code":"# S3 method for class 'carmon' plot(x, node_labels = TRUE, hide_isolated = TRUE, hot_nodes = TRUE, ...)"},{"path":"https://drquestion.github.io/carmon/reference/plot.carmon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot carmon networks — plot.carmon","text":"x object S3 class carmon. node_labels Show node names network. Defaults TRUE. hide_isolated Hide nodes connected node. Defaults TRUE. hot_nodes Highlight nodes selected key nodes node centrality analysis, drawing bigger adding criteria result central. Defaults TRUE. ... System required, used .","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot.carmon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot carmon networks — plot.carmon","text":"Returns NULL, invisibly.","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot.carmon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot carmon networks — plot.carmon","text":"","code":"data(multi_omics_small) c_obj <- carmon(multi_omics_small,     net_method = \"correlation\",     cor_quant = 0.25, plot = FALSE, verbose = FALSE ) plot(c_obj) #> Warning: is.na() applied to non-(list or vector) of type 'expression'"},{"path":"https://drquestion.github.io/carmon/reference/plot_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of the node centrality analysis — plot_report","title":"Plot the results of the node centrality analysis — plot_report","text":"Plot results node centrality analysis","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of the node centrality analysis — plot_report","text":"","code":"plot_report(carmon_obj, scaled = TRUE)"},{"path":"https://drquestion.github.io/carmon/reference/plot_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of the node centrality analysis — plot_report","text":"carmon_obj object S3 class carmon. scaled Whether centrality measures reported centrality analysis 0-1 scaled . Defaults TRUE.","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of the node centrality analysis — plot_report","text":"Returns NULL, invisibly.","code":""},{"path":"https://drquestion.github.io/carmon/reference/plot_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of the node centrality analysis — plot_report","text":"","code":"# Let's build and analyse a carmon network: data(multi_omics) c_obj <- carmon(multi_omics,     net_method = \"correlation\",     cor_quant = 0.05, analysis = TRUE, plot = FALSE,     # analysis is already TRUE by default     verbose = FALSE ) # To plot the results of the centrality analysis: plot_report(c_obj)"},{"path":"https://drquestion.github.io/carmon/reference/reconstruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","title":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","text":"Reconstruct multi-omics network list copulized layers chosen network reconstruction method. default method collaborative graphical regression.","code":""},{"path":"https://drquestion.github.io/carmon/reference/reconstruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","text":"","code":"reconstruct(   layers,   net_method = \"coglasso\",   sel_method = NULL,   ...,   cor_cutoff = NULL,   cor_quant = NULL,   minimal_output = FALSE,   verbose = FALSE )"},{"path":"https://drquestion.github.io/carmon/reference/reconstruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","text":"layers omics layers analyze. provided named R list data sets undergone copulization treatment copulize() function. Given output  copulize(), example object named carmon_cop, can accessed via carmon_cop$layers. net_method network reconstruction method use. four methods currently available : 'coglasso' collaborative graphical lasso, 'glasso' graphical lasso, 'mb' Meinshausen-Buhlmann neighborhood selection, 'correlation' thresholded Pearson's correlation network. default method 'coglasso'. sel_method network selection method. reconstruction procedure model selection procedures available. list : net_method 'coglasso': 'xstars' eXtended StARS, 'xestars' eXtended  Efficient StARS, 'ebic' extended bayesian information criterion. Default 'xestars'. net_method 'glasso': 'stars' StARS, 'ric' rotational information criterion, 'ebic' extended bayesian information criterion. Default 'stars'. net_method 'mb' 'correlation': 'stars' StARS, 'ric' rotational information criterion. Default 'stars'. ... additional optional arguments given network reconstruction procedure. available arguments depend chosen network reconstruction network selection methods. using 'coglasso' (default option), see coglasso::bs() reconstruction selection arguments. reconstructing 'glasso', 'mb', 'correlation' without setting cor_cutoff cor_quant see, respectively, huge::huge.glasso(), huge::huge.mb(), huge::huge.ct(). additional options network selection last three reconstruction methods, see huge::huge.select(). cor_cutoff Optional net_method = 'correlation'. cutoff value absolute Pearson's correlation network. edge absolute correlation cutoff excluded final network. used default, cutoff generated internal calculations. cor_quant Optional net_method = 'correlation', set alternative cor_cutoff. Determine cutoff correlation based top percentile indicated user. example, cor_quant = 0.2 set correlation cutoff 20th percentile absolute Pearson's correlation values, ordered highest lowest. used default, cutoff generated internal calculations. minimal_output Logical. Set TRUE get minimal output reconstruct() function, differs depending network reconstruction method. verbose level verbosity reconstruction process. 0 suppresses information output, 1 2 give progressively increasing amounts information inner computations happening inside reconstruct().","code":""},{"path":"https://drquestion.github.io/carmon/reference/reconstruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","text":"reconstruct() returns object S3 class carmon_rec. elements contains depend chosen network reconstruction selection strategies, main elements shared methods.  shared elements : sel_adj adjacency matrix final selected network. net_method chosen network reconstruction method. sel_method chosen model selection method. reconstruct_call matched call. Moreover, choosing 'coglasso' 'glasso' network reconstruction method, reconstruct() also returns: sel_icov inverse covariance matrix final selected network. Otherwise, choosing 'correlation', returns: cor Pearson's correlation matrix final selected network. minimal_output set TRUE, also elements returned object class carmon_rec given reconstruct(). non minimal output elements, please look coglasso::bs() net_method = 'coglasso'. three methods, look huge::huge() huge::huge.select().","code":""},{"path":"https://drquestion.github.io/carmon/reference/reconstruct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","text":"reconstruct() uses collaborative graphical lasso ('coglasso') default engine reconstruct multi-omics network, method specifically developed multi-omics scenario. carmon also implements three classic alternatives 'coglasso': graphical lasso, neighborhood selection (designed Meinshausen Buhlmann), Pearson's correlation networks. computational engine mainly used alternative options huge R package network reconstruction, couple small exceptions. one methods comes tailored model selection procedures. 'coglasso', example, StARS procedure extended multiple hyperparameters coglasso, XStARS, methods suggest using traditional StARS strategy.","code":""},{"path":"https://drquestion.github.io/carmon/reference/reconstruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct a multi-omics network from a list of copulized layers — reconstruct","text":"","code":"# To reconstruct the multi-omics network, it is first necessary to copulize # the input data with copulize(), then provide the normally distributed # omics layers to reconstruct(). data(multi_omics_micro) copulized <- copulize(multi_omics_micro) rec <- reconstruct(copulized$layers,     net_method = \"correlation\",     cor_quant = 0.5, verbose = FALSE )  # To make a carmon object out of these two: c_obj <- assemble_carmon_obj(copulized, rec)"},{"path":"https://drquestion.github.io/carmon/reference/which_marginals.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the marginal distributions currently implemented inside carmon — which_marginals","title":"Print the marginal distributions currently implemented inside carmon — which_marginals","text":"Print marginal distributions currently implemented inside carmon","code":""},{"path":"https://drquestion.github.io/carmon/reference/which_marginals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the marginal distributions currently implemented inside carmon — which_marginals","text":"","code":"which_marginals()"},{"path":"https://drquestion.github.io/carmon/reference/which_marginals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the marginal distributions currently implemented inside carmon — which_marginals","text":"which_marginals() prints message marginal distributions implemented inside carmon current version package, together nomenclature abbreviations carmon can comprehend giving custom input argument marginals.","code":""},{"path":"https://drquestion.github.io/carmon/reference/which_marginals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the marginal distributions currently implemented inside carmon — which_marginals","text":"","code":"# See the marginal distributions you can select to model your omics data with # carmon which_marginals() #> \"e\" or \"empirical\" for using the empirical marginal distribution; #> \"n\" or \"normal\" for using the normal marginal distribution; #> \"ln\" or \"lognormal\" for using the log-normal marginal distribution; #> \"nb\" or \"negative binomial\" for using the log-normal marginal distribution."},{"path":"https://drquestion.github.io/carmon/reference/which_omics.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the omics types for which carmon is tailored on — which_omics","title":"Print the omics types for which carmon is tailored on — which_omics","text":"Print omics types carmon tailored ","code":""},{"path":"https://drquestion.github.io/carmon/reference/which_omics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the omics types for which carmon is tailored on — which_omics","text":"","code":"which_omics()"},{"path":"https://drquestion.github.io/carmon/reference/which_omics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the omics types for which carmon is tailored on — which_omics","text":"which_omics() prints message omics types carmon tailored , together list synonyms type carmon can comprehend, default tailored marginal distribution omics type.","code":""},{"path":"https://drquestion.github.io/carmon/reference/which_omics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the omics types for which carmon is tailored on — which_omics","text":"","code":"# See the compatible omics types, their synonyms, and their distributions which_omics() #> \"rna-seq\", also as \"rnaseq\", \"gene counts\", \"transcriptomics\" #>     is modeled by default as count data with a negative-binomial marginal. #>  #> \"proteomics\", also as \"protein fragments\", \"protein counts\" #>     is modeled by default as count data with a negative-binomial marginal. #>  #> \"metabolomics\", also as \"lc-ms\", \"gc-ms\", \"ms\" #>     is modeled by default as positive continuous data with a log-normal #>     marginal. #>  #> Anything else is modeled with the empirical marginal."},{"path":"https://drquestion.github.io/carmon/news/index.html","id":"carmon-0990","dir":"Changelog","previous_headings":"","what":"carmon 0.99.0","title":"carmon 0.99.0","text":"First submission Bioconductor","code":""}]
